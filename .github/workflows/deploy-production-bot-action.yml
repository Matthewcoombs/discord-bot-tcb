name: Deploy Discord Bot

on:
  push:
    branches: [master]

env:
  REPO_NAME: ${{ github.event.repository.name }}
  NODE_PATH: /root/.nvm/versions/node/v20.4.0/bin/node
  PNPM_PATH: /root/.local/share/pnpm/pnpm

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clear existing project
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          user: root
          pass: ${{ secrets.SSH_PASSWORD }}
          command: rm -rf /root/${{ env.REPO_NAME }}

      - name: Deploy via SFTP
        uses: Creepios/sftp-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          password: ${{ secrets.SSH_PASSWORD }}
          localPath: '.'
          remotePath: /root/${{ env.REPO_NAME }}

      - name: Build and deploy bot
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          user: root
          pass: ${{ secrets.SSH_PASSWORD }}
          command: |
            cd /root/${{ env.REPO_NAME }}
            
            # Build project
            export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh
            rm -rf dist
            ${{ env.PNPM_PATH }} build-prod
            
            # Create bot service
            cat > /etc/systemd/system/discord-bot.service << EOF
            [Unit]
            Description=Discord Bot
            After=network.target
            
            [Service]
            Type=simple
            User=root
            WorkingDirectory=/root/${{ env.REPO_NAME }}
            ExecStart=${{ env.NODE_PATH }} dist/index.js
            Restart=on-failure
            RestartSec=30
            Environment=DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
            Environment=CLIENT_ID=${{ secrets.CLIENT_ID }}
            Environment=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            Environment=CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}
            Environment=POSTGRES_HOSTNAME=${{ secrets.POSTGRES_HOSTNAME }}
            Environment=POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}
            Environment=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            Environment=POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}
            Environment=EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}
            Environment=EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            # Update commands and start bot
            ${{ env.NODE_PATH }} scripts/delete-commands.js
            ${{ env.NODE_PATH }} scripts/deploy-commands.js
            
            systemctl daemon-reload
            systemctl enable discord-bot
            systemctl restart discord-bot

  version-bump:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version
        uses: jpb06/bump-package@latest
        with:
          major-keywords: major
          minor-keywords: feature,minor,refactor
          patch-keywords: fix,chore,bug-fix
